[{"/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/pages/_app.js":"1","/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/pages/index.js":"2","/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/components/AllProducts.js":"3","/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/components/MyRoutes.js":"4","/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/components/NewProduct.js":"5","/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/components/ProductTreemap.js":"6","/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/components/Treemap.js":"7","/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/components/index.js":"8"},{"size":351,"mtime":1647141338916,"results":"9","hashOfConfig":"10"},{"size":372,"mtime":1647140132280,"results":"11","hashOfConfig":"10"},{"size":2678,"mtime":1647054289467,"results":"12","hashOfConfig":"10"},{"size":364,"mtime":1647054289477,"results":"13","hashOfConfig":"10"},{"size":3148,"mtime":1647054289488,"results":"14","hashOfConfig":"10"},{"size":5269,"mtime":1647054289500,"results":"15","hashOfConfig":"10"},{"size":6235,"mtime":1647141457834,"results":"16","hashOfConfig":"10"},{"size":557,"mtime":1647056503953,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wo1ooy",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/pages/_app.js",["45","46","47","48"],[],"/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/pages/index.js",["49","50","51","52"],[],"import { AllProducts, NewProduct, ProductTreemap } from '../components';\nimport React from 'react';\n\nconst AdminView = () => {\n  return (\n    <div id=\"admin-view\">\n      <h1>Marketplace Analytics</h1>\n      <div id=\"admin-products-display\">\n        <AllProducts />\n        <NewProduct />\n      </div>\n      <ProductTreemap />\n    </div>\n  );\n};\n\nexport default AdminView;\n","/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/components/AllProducts.js",[],[],"/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/components/MyRoutes.js",["53","54","55","56","57","58"],[],"import React from 'react';\nimport { Route, Routes, Link, BrowserRouter as Router } from 'react-router-dom';\nimport AdminView from './AdminView';\n\nconst MyRoutes = () => {\n  return (\n    <Router>\n      <main>\n        <Routes>\n          <Route exact path=\"/\" element={<AdminView />} />\n        </Routes>\n      </main>\n    </Router>\n  );\n};\n\nexport default MyRoutes;\n","/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/components/NewProduct.js",[],[],"/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/components/ProductTreemap.js",["59"],[],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { setProducts } from '../redux/products';\nimport PropTypes from 'prop-types';\nimport Treemap from './Treemap';\nimport * as d3 from 'd3';\n\nconst productCategories = [\n  'produce',\n  'meats',\n  'dairy',\n  'household',\n  'frozen',\n  'pasta',\n  'seafood',\n  'bakery',\n  'baking',\n  'medical',\n  'office',\n  'spices',\n  'condiments',\n  'bath',\n  'miscellaneous',\n];\n\nfunction cascade(root, offset) {\n  const x = new Map();\n  const y = new Map();\n  return root\n    .eachAfter((d) => {\n      if (d.children) {\n        x.set(\n          d,\n          1 +\n            d3.max(d.children, (c) => (c.x1 === d.x1 - offset ? x.get(c) : NaN))\n        );\n        y.set(\n          d,\n          1 +\n            d3.max(d.children, (c) => (c.y1 === d.y1 - offset ? y.get(c) : NaN))\n        );\n      } else {\n        x.set(d, 0);\n        y.set(d, 0);\n      }\n    })\n    .eachBefore((d) => {\n      d.x1 -= 2 * offset * x.get(d);\n      d.y1 -= 2 * offset * y.get(d);\n    });\n}\n\nconst treemap = (data) =>\n  cascade(\n    d3\n      .treemap()\n      .size([1000, 500])\n      .paddingOuter(3)\n      .paddingTop(19)\n      .paddingInner(1)\n      .round(true)(\n      d3\n        .hierarchy(data)\n        .sum((d) => d.value)\n        .sort((a, b) => b.value - a.value)\n    ),\n    3 // treemap.paddingOuter\n  );\n\nfunction cascadeData(data) {\n  return {\n    name: 'analytics',\n    children: productCategories.map((category) => {\n      return {\n        name: category,\n        children: data.filter((item) => item.category === category),\n      };\n    }),\n  };\n}\n\nfunction chart(data) {\n  const root = treemap(data);\n  const color = d3.scaleSequential([8, 0], d3.interpolateMagma);\n  const format = d3.format(',d');\n\n  const svg = d3\n    .create('svg')\n    .attr('viewBox', [0, 0, 1000, 500])\n    .style('overflow', 'visible')\n    .style('font', '10px sans-serif');\n\n  // const shadow = DOM.uid('shadow');\n\n  svg\n    .append('filter')\n    // .attr('id', shadow.id)\n    .append('feDropShadow')\n    .attr('flood-opacity', 0.3)\n    .attr('dx', 0)\n    .attr('stdDeviation', 3);\n\n  const node = svg\n    .selectAll('g')\n    .data(d3.group(root, (d) => d.height))\n    .join('g')\n    // .attr('filter', shadow)\n    .selectAll('g')\n    .data((d) => d[1])\n    .join('g')\n    .attr('transform', (d) => `translate(${d.x0},${d.y0})`);\n\n  node.append('title').text(\n    (d) =>\n      `${d\n        .ancestors()\n        .reverse()\n        .map((d) => d.data.name)\n        .join('/')}\\n${format(d.value)}`\n  );\n\n  node\n    .append('rect')\n    // .attr('id', (d) => (d.nodeUid = DOM.uid('node')).id)\n    .attr('fill', (d) => color(d.height))\n    .attr('width', (d) => d.x1 - d.x0)\n    .attr('height', (d) => d.y1 - d.y0);\n\n  node\n    .append('clipPath')\n    // .attr('id', (d) => (d.clipUid = DOM.uid('clip')).id)\n    .append('use')\n    .attr('xlink:href', (d) => d.nodeUid.href);\n\n  node\n    .append('text')\n    .attr('clip-path', (d) => d.clipUid)\n    .selectAll('tspan')\n    .data((d) => d.data.name.split(/(?=[A-Z][^A-Z])/g).concat(format(d.value)))\n    .join('tspan')\n    .attr('fill-opacity', (d, i, nodes) =>\n      i === nodes.length - 1 ? 0.7 : null\n    )\n    .text((d) => d);\n\n  node\n    .filter((d) => d.children)\n    .selectAll('tspan')\n    .attr('dx', 3)\n    .attr('y', 13);\n\n  node\n    .filter((d) => !d.children)\n    .selectAll('tspan')\n    .attr('x', 3)\n    .attr(\n      'y',\n      (d, i, nodes) => `${(i === nodes.length - 1) * 0.3 + 1.1 + i * 0.9}em`\n    );\n\n  return svg.node();\n}\n\nclass ProductTreemap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loading = true;\n    this.createTree = this.createTree.bind(this);\n  }\n\n  createTree() {\n    let data =\n      this.props.products && this.props.products.length > 0\n        ? this.props.products\n        : [{ id: 0, name: 'Loading', category: 'Loading', quantity: 1 }];\n    const chartNode = Treemap(data, {\n      path: (d) => d.name,\n      value: (d) => d?.quantity,\n      group: (d) => d.category,\n      label: (d) => [d.name, d.quantity.toString()].join('\\n'),\n      width: 1000,\n      height: 500,\n    });\n\n    // CLEAR ANY PREVIOUS CHARTS\n    const app = document.getElementById('app');\n    const prevCharts = document.querySelectorAll('svg');\n    if (prevCharts) {\n      for (let prevChart of prevCharts) {\n        app.removeChild(prevChart);\n      }\n    }\n\n    // INSERT STANDARD TREEMAP\n    app.appendChild(chartNode);\n\n    // INSERT CASCADED TREEMAP\n    // data = cascadeData(data);\n    // app.appendChild(chart(data));\n  }\n\n  componentDidMount() {\n    this.props.setProducts();\n    this.loading = false;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.products !== this.props.products) {\n      this.loading = false; // Not sure what to put here.\n    }\n  }\n\n  render() {\n    this.createTree();\n    return this.loading ? <h1>LOADING</h1> : <div>{/* <Tree /> */}</div>;\n  }\n}\n\nProductTreemap.propTypes = {\n  products: PropTypes.array,\n  setProducts: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.products,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setProducts: () => dispatch(setProducts()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTreemap);\n","/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/components/Treemap.js",[],[],"/Users/daviddunham/Documents/Documents - David’s MacBook Air/OneDrive/Fullstack Academy/Senior/Stackathon/components/index.js",[],[],{"ruleId":"60","severity":2,"message":"61","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":18},{"ruleId":"60","severity":2,"message":"64","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":13},{"ruleId":"60","severity":2,"message":"65","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":16},{"ruleId":"60","severity":2,"message":"66","line":6,"column":31,"nodeType":"62","messageId":"63","endLine":6,"endColumn":40},{"ruleId":"60","severity":2,"message":"67","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":21},{"ruleId":"60","severity":2,"message":"68","line":1,"column":23,"nodeType":"62","messageId":"63","endLine":1,"endColumn":33},{"ruleId":"60","severity":2,"message":"69","line":1,"column":35,"nodeType":"62","messageId":"63","endLine":1,"endColumn":49},{"ruleId":"60","severity":2,"message":"64","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":13},{"ruleId":"60","severity":2,"message":"64","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},{"ruleId":"60","severity":2,"message":"70","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":15},{"ruleId":"60","severity":2,"message":"71","line":2,"column":17,"nodeType":"62","messageId":"63","endLine":2,"endColumn":23},{"ruleId":"60","severity":2,"message":"72","line":2,"column":25,"nodeType":"62","messageId":"63","endLine":2,"endColumn":29},{"ruleId":"60","severity":2,"message":"73","line":2,"column":48,"nodeType":"62","messageId":"63","endLine":2,"endColumn":54},{"ruleId":"60","severity":2,"message":"74","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":17},{"ruleId":null,"fatal":true,"severity":2,"message":"75","line":178,"column":23},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'render' is defined but never used.","'Component' is defined but never used.","'AllProducts' is defined but never used.","'NewProduct' is defined but never used.","'ProductTreemap' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'AdminView' is defined but never used.","Parsing error: Unexpected token ."]